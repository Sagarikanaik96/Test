[
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Request for Quotation",
  "modified": "2020-09-10 15:50:50.653513",
  "name": "Request for Quotation-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Request for Quotation', { \non_submit:function(frm,cdt,cdn){\n      var doc=frm.doc;\n        $.each(doc.suppliers,function(idx,supplier){\n            var company;\n            frappe.call({\n                type: \"GET\",\n                url: \"/api/method/get_company_name\",\n                args:{\n                    doctype:'Supplier',\n                    is_internal_supplier:1,\n                    supplier_name:supplier.supplier\n                },\n               async:false,\n                callback: function(r){\n                    company=r.company;\n                }\n            });\n            if(company!==null){\n                var emailTemplate='<h1><strong> Opportunity is created</strong></h1>';\n                sendEmail(doc.name,supplier.email_id,emailTemplate);\n            }\n            else{\n                 var emailTemplate1='<h1><strong>Unable to create an Opportunity because you do not have any company associated with yourself</strong></h1>';\n                sendEmail(doc.name,supplier.email_id,emailTemplate1);\n            }\n        });\n},\nbefore_save:function(frm,cdt,cdn){\n      var supplierList=frm.doc.suppliers;\n    for(var i=0; i< supplierList.length; i++) {\n\t    for(var j=i+1; j<supplierList.length; j++) {\n   \t\t    if(supplierList[i].supplier===supplierList[j].supplier) {\n                frappe.throw(__('The already entered/inserted Supplier '+supplierList[j].supplier+' should not be allowed to added twice.'));\n            }\n        }\n    }\n}\n});\n\nfrappe.ui.form.on('Request for Quotation Item', {\nitem_code:function(frm,cdt,cdn){\n    var item_group=[];\n        item_group=get_item_group(frm.doc.items);\n        supplier_filter(frm,item_group);\n},\nqualifier:function(frm,cdt,cdn){\n    var item_group=[];\n    var tag_supplier=[];\n    item_group=get_item_group(frm.doc.items);\n    $.each(frm.doc.items, function(idx, item){\n        frappe.call({\n                    method: \"frappe.client.get_list\",\n                    async:false,\n                    args: {\n                        doctype: \"Tag Link\",\n                        fields: \"parent\",\n            \t    filters:{\n            \t        \"tag\":item.qualifier,\n            \t        \"parenttype\":\"Supplier\"\n            \t    \t}\n                    },\n                callback: function(r) {\n                    $.each( r.message,function(idx,supplier){\n                        if(!tag_supplier.includes(supplier.parent)){\n            \t        \ttag_supplier.push(supplier.parent);\n                        }\n                    });\n        \t}\n        });\n    });\n     supplier_filter(frm,item_group,tag_supplier);\n}\n});\n\n\nfunction sendEmail(name,email,template){\nfrappe.call({\n                    method: \"frappe.core.doctype.communication.email.make\",\n                    args: {\n                        subject: name,\n                        communication_medium: \"Email\",\n                        recipients: email,\n                        content: template,\n                        communication_type: \"Communication\",\n                        send_email:1,\n                        attachments:[],\n                        print_format:\"Standard\",\n                        doctype: \"Request for Quotation\",\n                        name: name,\n                        print_letterhead: 0\n                    },\n                    callback: function(rh){\n                        console.log(\"sent\");\n                    }   \n                });\n}\nfunction get_item_group(items){\nvar item_group=[];\n    $.each(items,function(idx,item){\n        frappe.call({\n                        method: \"frappe.client.get_value\",\n                        async:false,\n                        args: {\n                            doctype: \"Item\",\n                            fieldname: \"item_group\",\n                \t        filters:{\n                \t            \"item_code\":item.item_code\n                \t    \t}\n                        },\n                    callback: function(r) {\n                        if(!item_group.includes(r.message.item_group)){\n            \t        \titem_group.push(r.message.item_group);\n                        }\n                    }\n                });\n    });\n    return item_group;\n}\n\nfunction supplier_filter(frm,item_group,tag_supplier=[]){\n var suppliers=tag_supplier;\n    frappe.call({\n        \t    type: \"GET\",\n                url: '/api/method/supplier_filter_list',\n        \t\targs: {\n        \t\t\titem_group: item_group\n        \t\t},\n            callback: function(r){\n                console.log(r)\n        \t\tfor(var i=0; i<r.supplierList.length; i++){\n        \t\t\t if(!suppliers.includes(r.supplierList[i])){\n        \t\t\t\tsuppliers.push(r.supplierList[i]);\n                    }\n        \t\t}\n            }\n    });\nfrm.set_query(\"supplier\", \"suppliers\", function(doc, cdt, cdn) {\n        \t        return {\n            \t\t\tfilters: {\n            \t\t\t\tsupplier_name:[\"in\",suppliers] \n            \t\t\t}\n        \t\t    };\n                });\n}"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Quotation",
  "modified": "2020-09-04 16:04:44.919007",
  "name": "Quotation-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Quotation', { \non_submit:function(frm,cdt,cdn){\n      var doc=frm.doc;\n            var email;\n            frappe.call({\n                type: \"GET\",\n                url: \"/api/method/get_email\",\n                args:{\n                    doctype:'customer',\n                    is_internal_customer:1,\n                    customer_name:doc.customer_name\n                },\n               async:false,\n                callback: function(r){\n                     email=r.email;\n                }\n            });\n            if(email!==null){\n                var emailTemplate='<h1><strong>  Supplier Quotation is created.</strong></h1>';\n                sendEmail(doc.name,email,emailTemplate);\n            }\n}\n});\nfunction sendEmail(name,email,template){\nfrappe.call({\n                    method: \"frappe.core.doctype.communication.email.make\",\n                    args: {\n                        subject: name,\n                        communication_medium: \"Email\",\n                        recipients: email,\n                        content: template,\n                        communication_type: \"Communication\",\n                        send_email:1,\n                        attachments:[],\n                        print_format:\"Standard\",\n                        doctype: \"Quotation\",\n                        name: name,\n                        print_letterhead: 0\n                    },\n                    callback: function(rh){\n                        console.log(\"sent\");\n                    }   \n                });\n}"
 }
]