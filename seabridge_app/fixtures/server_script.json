[
 {
  "allow_guest": 0,
  "api_method": "supplier_filter_list",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "modified": "2020-09-09 13:55:01.027413",
  "name": "Add filter for supplier",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "itemGroups=json.loads(frappe.form_dict.get(\"item_group\"))\nsupplierList=[]\nfor item in itemGroups:\n    itemGroupList=[]\n    groupList=[]\n    itemGroupList.append(item)\n    parent_item_group=frappe.db.get_value('Item Group',{'item_group_name':item},'parent_item_group')\n    if parent_item_group not in itemGroupList:\n        itemGroupList.append(parent_item_group)\n        \n    for group in itemGroupList:\n        groupList=frappe.db.get_list('Item Group Detail',filters={'item_group':group},fields={'parent'})\n        for row in groupList:\n            supplierList.append(row.parent)     \n        \nfrappe.response['supplierList']=supplierList",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Submit",
  "modified": "2020-09-07 15:18:05.870445",
  "name": "Create Opportunity",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Request for Quotation",
  "script": "def create_user_permission(user,allow,value,check,applicable_for):\n    docVal=frappe.db.get_list(\"User Permission\", filters={'user':user,'for_value':value,'allow':allow,'apply_to_all_doctypes':check,'applicable_for':applicable_for})\n    if not docVal:\n        frappe.get_doc(dict(doctype = 'User Permission',\n        \tuser = user,\n            allow=allow,\n        \tfor_value =value,\n        \tapply_to_all_doctypes=check,\n        \tapplicable_for=applicable_for)).insert()\n   \n   \nfor row in doc.suppliers:\n    try:\n        customer=frappe.db.get_value('Customer',{'is_internal_customer':1,'represents_company':doc.company},'customer_name')\n        company=frappe.db.get_value('Supplier',{'is_internal_supplier':1,'supplier_name':row.supplier},'represents_company')\n        contact_person=frappe.db.get_value('Dynamic Link',{'parenttype':'Contact','link_doctype':'Customer','link_name':customer},'parent')\n        customer_address=frappe.db.get_value('Dynamic Link',{'parenttype':'Address','link_doctype':'Customer','link_name':customer},'parent')\n        if customer:\n            if company:\n                doc1=frappe.get_doc(dict(doctype = 'Opportunity',\n        \t\t\t        opportunity_from = 'Customer',\n        \t\t        \tparty_name=customer,\n        \t\t        \tcontact_person=contact_person,\n        \t\t        \twith_items=1,\n        \t\t        \tcustomer_address=customer_address,\n        \t\t            contact_display=contact_person,\n        \t\t            contact_email=frappe.db.get_value('Contact Email', {'parenttype':'Contact','parent':contact_person},'email_id'),\n        \t\t            company=company,\n        \t\t        \treference_no=doc.name,\n        \t\t        \tignore_permissions='true')).insert()\n                for val in doc.items:\n        \t\t        doc1.append('items', {\n        \t\t            'item_code': val.item_code,\n        \t\t            'qty': val.qty,\n        \t\t            'uom':val.uom\n        \t\t            })\n        \t\t        doc1.add_comment('Comment',row.supplier+' created')\n        \t\t        doc1.save()\n                doc.add_comment('Created','  created Opportunity for '+row.supplier)\n                for item in doc.items:\n                        value1=frappe.db.get_value('Item',item.item_code,'company_name')\n                        if value1:\n                            create_user_permission(row.email_id,'Company',value1,0,'Item')\n                            \n                value= frappe.db.get_value('Supplier',row.supplier,'represents_company')\n                docVal=frappe.db.get_list(\"User Permission\", filters={'user':row.email_id,'for_value':value,'allow':'Company'})\n                if not docVal:\n            \t    frappe.get_doc(dict(doctype = 'User Permission',\n        \t\t        user = row.email_id,\n        \t\t        allow='Company',\n        \t\t        for_value =value,\n        \t\t        apply_to_all_doctypes=1)).insert()\n                else:\n                    pass\n        else:\n            frappe.msgprint('Unable to create Opportunity as customer: '+doc.company+ ' is not associated with any company. Register the Company and submit the document: '+doc.name+'. As Customer is not associated with any company, do not let MA submit the RFQ document.')\n            raise frappe.ValidationError('Unable to create Opportunity as customer: ' +doc.company+' is not associated with any company.  ')\n    except KeyError:\n        pass",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Cancel",
  "modified": "2020-08-27 22:05:02.322739",
  "name": "Validate RFQ",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Request for Quotation",
  "script": "frappe.msgprint('Unable to cancel the document as Request for Quotation '+doc.name+' is linked with the submitted opportunity')\nraise frappe.ValidationError('Unable to cancel the document as Request for Quotation'+doc.name+'is linked with the submitted opportunity')",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": "get_company_name",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "modified": "2020-08-28 16:28:03.134508",
  "name": "Get Company Name",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "doctype=frappe.form_dict.get(\"doctype\")\nis_internal_supplier=frappe.form_dict.get(\"is_internal_supplier\")\nsupplier=frappe.form_dict.get(\"supplier_name\")\nfrappe.response['company']=frappe.db.get_value(doctype,{'is_internal_supplier':is_internal_supplier,'supplier_name':supplier},'represents_company')",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Submit",
  "modified": "2020-09-04 19:35:41.538186",
  "name": "Auto Create Supplier Quotation",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Quotation",
  "script": "supplier=frappe.db.get_value('Supplier',{'is_internal_supplier':1,'represents_company':doc.company},'supplier_name')\ncompany=frappe.db.get_value('Customer',{'is_internal_Customer':1,'customer_name':doc.customer_name},'represents_company')\ncontact_person=frappe.db.get_value('Dynamic Link',{'parenttype':'Contact','link_doctype':'Supplier',\"link_name\":supplier},'parent')\nif company:\n    if supplier:\n        sq_doc=frappe.get_doc(dict(doctype = 'Supplier Quotation',\n                    supplier=supplier,\n                    company=company,\n                    valid_till=doc.valid_till,\n                    supplier_address=frappe.db.get_value(\"Dynamic Link\",{\"parenttype\":\"Address\",\"link_doctype\":\"Supplier\",\"link_name\":supplier},\"parent\"),\n                    contact_person=contact_person,\n        \t\t    contact_email=frappe.db.get_value('Contact Email', {'parenttype':'Contact','parent':contact_person},'email_id'),\n                    conversion_rate=1,\n                    quotation_no=doc.name,\n                    tc_name=doc.tc_name,\n                    terms=doc.terms,\n                    total=doc.total,\n                    grand_total=doc.grand_total,\n                    base_grand_total=doc.base_grand_total,\n                    rounded_total=doc.rounded_total,\n                    base_rounded_total=doc.base_rounded_total,\n                    rfq_no=frappe.db.get_value('Opportunity',doc.opportunity,'reference_no')\n                )).insert(ignore_mandatory=True)\n        for val in doc.items:\n                sq_doc.append('items', {\n                    'item_code':val.item_code,\n                    'qty':val.qty,\n                    'uom':val.uom,\n                    'stock_uom':val.stock_uom,\n                    'rate':val.rate,\n                    'amount':val.amount,\n                    'base_rate':val.base_rate,\n                    'base_amount':val.base_amount,\n                    'description':val.description,\n                'conversion_factor':val.conversion_factor\n                })\n        sq_doc.add_comment('Comment',' System created  '+sq_doc.name)\n        sq_doc.save()\n        doc.add_comment('Comment','  Supplier Quotation: '+sq_doc.name)  \nelse:\n    frappe.msgprint('Unable to create Supplier Quotation as customer: '+doc.customer_name +' is not associated with any company. Register the Company and submit the document: '+doc.name+ '. As Customer is not associated with any company, do not let Vendor submit the Quotation document.')\n    raise frappe.ValidationError('Unable to create Supplier Quotation as customer: '+doc.customer_name +' is not associated with any company. Register the Company and submit the document: '+doc.name+ '. As Customer is not associated with any company, do not let Vendor submit the Quotation document.')",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Cancel",
  "modified": "2020-09-03 17:01:18.293436",
  "name": "Validate Quotation",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Quotation",
  "script": "frappe.msgprint('Unable to cancel the document as Quotation '+doc.name+' is linked with the supplier quotation.')\nraise frappe.ValidationError('Unable to cancel the document as Quotation '+doc.name+' is linked with the supplier quotation.')",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": "get_email",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "modified": "2020-09-03 19:13:32.611643",
  "name": "Get Email",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "doctype=frappe.form_dict.get(\"doctype\")\nis_internal_customer=frappe.form_dict.get(\"is_internal_customer\")\ncustomer=frappe.form_dict.get(\"customer_name\")\ncompany=frappe.db.get_value('Customer',{'is_internal_Customer':is_internal_customer,'customer_name':customer},'represents_company')\nif company:\n    frappe.response['email']=frappe.db.get_value('User Permission',{'for_value':company,'allow':'Company'},'user')",
  "script_type": "API"
 }
]