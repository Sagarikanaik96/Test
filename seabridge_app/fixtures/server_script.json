[
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Submit",
  "modified": "2020-08-29 14:26:02.153312",
  "name": "Create Opportunity",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Request for Quotation",
  "script": "for row in doc.suppliers:\n    try:\n        customer=frappe.db.get_value('Customer',{'is_internal_customer':1,'represents_company':doc.company},'customer_name')\n        company=frappe.db.get_value('Supplier',{'is_internal_supplier':1,'supplier_name':row.supplier},'represents_company')\n        contact_person=frappe.db.get_value('Dynamic Link',{'parenttype':'Contact','link_doctype':'Customer','link_name':customer},'parent')\n        if customer:\n            if company:\n                doc1=frappe.get_doc(dict(doctype = 'Opportunity',\n        \t\t\t        opportunity_from = 'Customer',\n        \t\t        \tparty_name=customer,\n        \t\t        \tcontact_person=contact_person,\n        \t\t        \twith_items=1,\n        \t\t            contact_display=contact_person,\n        \t\t            contact_email=frappe.db.get_value('Contact Email', {'parenttype':'Contact','parent':contact_person},'email_id'),\n        \t\t            company=company,\n        \t\t        \treference_no=doc.name,\n        \t\t        \tignore_permissions='true')).insert()\n                for val in doc.items:\n        \t\t        doc1.append('items', {\n        \t\t            'item_code': val.item_code,\n        \t\t            'qty': val.qty,\n        \t\t            'uom':val.uom\n        \t\t            })\n        \t\t        doc1.add_comment('Comment',row.supplier+' created')\n        \t\t        doc1.save()\n                doc.add_comment('Created','  created Opportunity for '+row.supplier)\n                \n                value= frappe.db.get_value('Supplier',row.supplier,'represents_company')\n                docVal=frappe.db.get_list(\"User Permission\", filters={'user':row.email_id,'for_value':value,'allow':'Company'})\n                if not docVal:\n            \t    frappe.get_doc(dict(doctype = 'User Permission',\n        \t\t        user = row.email_id,\n        \t\t        allow='Company',\n        \t\t        for_value =value,\n        \t\t        apply_to_all_doctypes=1)).insert()\n                else:\n                    pass\n        else:\n            frappe.msgprint('Unable to create Opportunity as customer: '+doc.company+ ' is not associated with any company. Register the Company and submit the document: '+doc.name+'. As Customer is not associated with any company, donot let MA submit the RFQ document.')\n            raise frappe.ValidationError('Unable to create Opportunity as customer: ' +doc.company+' is not associated with any company.  ')\n    except KeyError:\n        pass",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Cancel",
  "modified": "2020-08-27 22:05:02.322739",
  "name": "Validate RFQ",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Request for Quotation",
  "script": "frappe.msgprint('Unable to cancel the document as Request for Quotation '+doc.name+' is linked with the submitted opportunity')\nraise frappe.ValidationError('Unable to cancel the document as Request for Quotation'+doc.name+'is linked with the submitted opportunity')",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": "get_company_name",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "modified": "2020-08-28 16:28:03.134508",
  "name": "Get Company Name",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "doctype=frappe.form_dict.get(\"doctype\")\nis_internal_supplier=frappe.form_dict.get(\"is_internal_supplier\")\nsupplier=frappe.form_dict.get(\"supplier_name\")\nfrappe.response['company']=frappe.db.get_value(doctype,{'is_internal_supplier':is_internal_supplier,'supplier_name':supplier},'represents_company')",
  "script_type": "API"
 }
]